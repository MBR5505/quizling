<div class="container">
  <div class="row justify-content-center">
    <div class="col-lg-8">
      <div class="card">
        <div class="card-header bg-primary text-white">
          <h3 class="mb-0">Rediger profil</h3>
        </div>
        <div class="card-body">
          <form id="profile-form">
            <div class="mb-3">
              <label for="username" class="form-label">Brukernavn</label>
              <input type="text" class="form-control" id="username" name="username" value="<%= user.username %>" required minlength="3" maxlength="30">
              <div class="invalid-feedback" id="username-error"></div>
            </div>
            
            <div class="mb-3">
              <label for="email" class="form-label">E-post</label>
              <input type="email" class="form-control" id="email" name="email" value="<%= user.email %>" required>
              <div class="invalid-feedback" id="email-error"></div>
            </div>
            
            <div class="alert alert-danger d-none" id="general-error"></div>
            <div class="alert alert-success d-none" id="success-message">Profilen din ble oppdatert!</div>
            
            <div class="d-grid gap-2 d-md-flex justify-content-md-end">
              <a href="/user/profile" class="btn btn-secondary me-md-2">Avbryt</a>
              <button type="submit" class="btn btn-primary">Lagre endringer</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.getElementById('profile-form').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    // Reset error messages
    document.querySelectorAll('.invalid-feedback').forEach(el => el.textContent = '');
    document.querySelectorAll('.is-invalid').forEach(el => el.classList.remove('is-invalid'));
    document.getElementById('general-error').classList.add('d-none');
    document.getElementById('success-message').classList.add('d-none');
    
    // Get form data
    const username = document.getElementById('username').value;
    const email = document.getElementById('email').value;
    
    try {
      const response = await fetch('/user/update-profile', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ username, email })
      });
      
      const data = await response.json();
      
      if (!response.ok) {
        if (data.errors) {
          // Display validation errors
          Object.entries(data.errors).forEach(([field, message]) => {
            const inputElement = document.getElementById(field);
            const errorElement = document.getElementById(`${field}-error`);
            
            if (inputElement && errorElement) {
              inputElement.classList.add('is-invalid');
              errorElement.textContent = message;
            } else {
              // General error
              document.getElementById('general-error').textContent = message;
              document.getElementById('general-error').classList.remove('d-none');
            }
          });
        } else {
          // General error
          document.getElementById('general-error').textContent = data.error || 'Noe gikk galt ved oppdatering av profil';
          document.getElementById('general-error').classList.remove('d-none');
        }
        return;
      }
      
      // Show success message
      document.getElementById('success-message').classList.remove('d-none');
      
      // Scroll to top of form
      window.scrollTo(0, 0);
      
      // Redirect after short delay
      setTimeout(() => {
        window.location.href = '/user/profile';
      }, 2000);
    } catch (error) {
      console.error('Error:', error);
      document.getElementById('general-error').textContent = 'Det oppstod en feil ved oppdatering av profil';
      document.getElementById('general-error').classList.remove('d-none');
    }
  });
</script>
